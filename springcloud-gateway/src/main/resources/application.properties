spring.application.name=springcloud-gateway
server.port= 9080
#指定注册中心的地址，以便使用服务发现功能
eureka.client.serviceUrl.defaultZone= http://localhost:8000/eureka/
#使用ip注册到eureka
eureka.instance.prefer-ip-address= true
eureka.instance.instance-id= ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}
#curl --header "version1:24040330" -v http://localhost:9080
#curl --header "version1:24040330" -v http://localhost:9080/springcloud-producer/hello?name=hcx1
#curl --header "version1:24040330" -v http://localhost:9080/springcloud-consumer/hello?name=hcx1
# 网关配置
#启用基于服务发现的路由定义定位器就必须设置
spring.cloud.gateway.discovery.locator.enabled=true
#通过小写的服务名称进行访问
spring.cloud.gateway.discovery.locator.lowerCaseServiceId=true

##########################################灰度#########################################
# 灰度配置(优先级最高,Order要少于0)
#spring.cloud.gateway.routes[0].id=header_route
#spring.cloud.gateway.routes[0].uri=http://www.baidu.com/
#spring.cloud.gateway.routes[0].order=-1000
#spring.cloud.gateway.routes[0].predicates[0]=Header=version, ^0x[0-9]{6}3{1}([0-9]|[ABCDEF]){1}$
##########################################灰度#########################################

##########################################限流#########################################
#spring.cloud.gateway.routes[0].filters[0].name=RequestRateLimiter
#用于限流的键的解析器的 Bean 对象的名字。它使用 SpEL 表达式根据#{@beanName}从 Spring 容器中获取 Bean 对象。
#spring.cloud.gateway.routes[0].filters[0].args.key-resolver=#{@uriKeyResolver}
#令牌桶每秒填充平均速率。
#spring.cloud.gateway.routes[0].filters[0].args.redis-rate-limiter.replenishRate=1
#令牌桶总容量。
#spring.cloud.gateway.routes[0].filters[0].args.redis-rate-limiter.burstCapacity=10
#限流需要使用redis
#spring.redis.host=47.97.123.158
#spring.redis.port=6379
#spring.redis.database=2
#spring.redis.password=Ryan_45@016#25
##########################################限流#########################################

##########################################熔断#########################################
#spring.cloud.gateway.routes[0].filters[1].name=Hystrix
#spring.cloud.gateway.routes[0].filters[1].args.name=fallbackcmd
#spring.cloud.gateway.routes[0].filters[1].args.fallbackUri=forward:/fallbackcontroller

#设置超时
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds = 1
#hystrix.command.fallbackcmd.execution.isolation.thread.timeoutInMilliseconds= 1

#{serviceName}.ribbon.{propertyName}
#{springcloud-consumer.ribbon.ReadTimeout= 1
#{springcloud-consumer.ribbon.ConnectTimeout=1
#{springcloud-consumer.ribbon.MaxAutoRetries=0
#{springcloud-consumer.ribbon.MaxAutoRetriesNextServer=1
##########################################熔断#########################################

# 正常配置(优先级order需要高于1)
 #route.producer.uri= lb://springcloud-producer
 #spring.cloud.gateway.routes[1].id=producer_route
# uri以lb://开头（lb代表从注册中心获取服务），后面接的就是你需要转发到的服务名称
 #spring.cloud.gateway.routes[1].uri=${route.producer.uri}
 #spring.cloud.gateway.routes[1].order=10
 #spring.cloud.gateway.routes[1].predicates[0]=Path=/springcloud-producer/**
#截取掉路径的第一部分前缀
 #spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

logging.level.org.springframework.cloud.gateway= trace
logging.level.org.springframework.http.server.reactive=debug
logging.level.org.springframework.web.reactive= debug
logging.level.reactor.ipc.netty= debug


##########################################微服务链路跟踪##########################################
#spring.zipkin.base-url= http://localhost:8769
#修改flush间隔，默认是1秒：
#spring.zipkin.flush-interval=1
#收集样本比率
#spring.sleuth.sampler.percentage=1
